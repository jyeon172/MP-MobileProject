// Generated by view binder compiler. Do not edit!
package com.example.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Board3MainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FloatingActionButton addFab;

  @NonNull
  public final Toolbar board3Toolbar;

  @NonNull
  public final RecyclerView mainRecyclerView;

  @NonNull
  public final Spinner spinner;

  private Board3MainBinding(@NonNull LinearLayout rootView, @NonNull FloatingActionButton addFab,
      @NonNull Toolbar board3Toolbar, @NonNull RecyclerView mainRecyclerView,
      @NonNull Spinner spinner) {
    this.rootView = rootView;
    this.addFab = addFab;
    this.board3Toolbar = board3Toolbar;
    this.mainRecyclerView = mainRecyclerView;
    this.spinner = spinner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Board3MainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Board3MainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.board3_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Board3MainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addFab;
      FloatingActionButton addFab = ViewBindings.findChildViewById(rootView, id);
      if (addFab == null) {
        break missingId;
      }

      id = R.id.board3_toolbar;
      Toolbar board3Toolbar = ViewBindings.findChildViewById(rootView, id);
      if (board3Toolbar == null) {
        break missingId;
      }

      id = R.id.mainRecyclerView;
      RecyclerView mainRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (mainRecyclerView == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      return new Board3MainBinding((LinearLayout) rootView, addFab, board3Toolbar, mainRecyclerView,
          spinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
